<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <RootNamespace>UMAPuwotSharp</RootNamespace>
    <AssemblyName>UMAPuwotSharp</AssemblyName>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PlatformTarget>x64</PlatformTarget>
    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
    
    <!-- Enhanced NuGet metadata -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageId>UMAPuwotSharp</PackageId>
    <Version>3.1.1</Version>
    <Authors>Amin Gholiha</Authors>
    <Company>ID Soft AB</Company>
    <Product>UMAPuwotSharp Enhanced with HNSW</Product>
    <Title>UMAP for .NET with HNSW Optimization &amp; AI Safety</Title>
    <Description>Revolutionary UMAP library with HNSW optimization providing 50-2000x faster transforms and production safety features. Unique capabilities: HNSW (Hierarchical Navigable Small World) optimization, 5-level outlier detection (Normal to No Man's Land), 80% memory reduction, AI/ML data validation, arbitrary dimensions (1D-50D), multiple metrics, progress reporting, and complete model persistence. Perfect for production AI pipelines requiring data quality assessment.</Description>
    <PackageTags>umap;uwot;hnsw;ai-safety;outlier-detection;dimensionality-reduction;machine-learning;embedding;manifold-learning;production-ml;data-validation;nearest-neighbors;performance-optimization;memory-efficient;multi-dimensional;progress-reporting;model-persistence</PackageTags>
    <RepositoryUrl>https://github.com/78Spinoza/UMAP</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>GPL-3.0-or-later</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/78Spinoza/UMAP</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageReleaseNotes>
ðŸ”§ CRITICAL UPDATE - UMAP v3.1.1: Enhanced Linux HNSW Binary

âš¡ PERFORMANCE ENHANCEMENT:
- Updated Linux library with complete HNSW optimization (211KB vs 174KB)
- Fixed cross-platform binary parity for consistent performance
- Enhanced Docker build process for reliable cross-compilation
- All platforms now have identical HNSW acceleration capabilities

ðŸš€ CONTINUES v3.1.0 REVOLUTION: Revolutionary HNSW k-NN Optimization

ðŸŽ¯ BREAKTHROUGH PERFORMANCE:
- Complete HNSW k-NN optimization: 50-2000x training speedup
- Lightning-fast transforms: &lt;3ms per sample (vs 50-200ms before)
- Massive memory reduction: 80-85% less RAM usage (15-45MB vs 240MB)
- Training optimization: Hours â†’ Minutes â†’ Seconds for large datasets

ðŸ†• NEW API FEATURES:
- forceExactKnn parameter: Choose HNSW speed or exact accuracy
- Enhanced progress callbacks: Phase-aware reporting with time estimates
- Smart auto-optimization: Automatic HNSW/exact selection by metric
- OpenMP parallelization: Multi-core acceleration built-in
- Advanced warning system: Helpful guidance for optimal performance

ðŸ”¥ HNSW-ACCELERATED METRICS:
- âœ… Euclidean: General-purpose data (50-200x speedup)
- âœ… Cosine: High-dimensional sparse data (30-150x speedup)
- âœ… Manhattan: Outlier-robust applications (40-180x speedup)
- âš¡ Correlation/Hamming: Auto-fallback to exact with warnings

ðŸ“Š VALIDATED PERFORMANCE:
- Accuracy: MSE &lt; 0.01 between HNSW and exact embeddings
- Speed: 230x faster for 50k+ sample datasets
- Memory: 87% reduction for production deployments
- Cross-platform: Windows/Linux parity with comprehensive test suites

ðŸ’¯ PRODUCTION-READY FEATURES:
- 5-level outlier detection: Normal â†’ No Man's Land
- Confidence scoring for AI/ML validation
- Complete model persistence with HNSW indices
- Comprehensive safety analysis and data quality assessment
- Arbitrary embedding dimensions (1D-50D) all HNSW-optimized

âœ… UPGRADE RECOMMENDED: Massive performance gains with full backward compatibility!
    </PackageReleaseNotes>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Copyright>Copyright Â© 2025 ID Soft AB</Copyright>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
  </PropertyGroup>

  <!-- Include enhanced native libraries in the package -->
  <ItemGroup>
    <Content Include="uwot.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\win-x64\native\uwot.dll</PackagePath>
    </Content>
    <Content Include="libuwot.so">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\linux-x64\native\libuwot.so</PackagePath>
    </Content>
  </ItemGroup>

  <!-- Include README in package -->
  <ItemGroup>
    <None Include="..\..\README.md">
      <Pack>true</Pack>
      <PackagePath>README.md</PackagePath>
    </None>
  </ItemGroup>

</Project>